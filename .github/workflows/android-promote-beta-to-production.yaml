name: android-promote-beta-to-production
on:
  push:
    tags:
      - v*-release*

jobs:
  deploy_to_google_play:
    runs-on: ubuntu-latest
    environment: Deployment
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - name: Prepare secrets directory
        run: mkdir -p secrets
      - name: Prepare Google-Play secrets
        run: echo -n "${{secrets.GOOGLE_PLAY_SECRETS_BASE64}}" | base64 --decode > ./secrets/google-play-secrets.json
      - name: Fastlane - install fastlane
        run: bundle install
        working-directory: android
      - name: Fastlane - promote beta to production
        run: bundle exec fastlane promote_beta_to_production
        working-directory: android
  build_and_attach_appbundle_to_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    environment: Android
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        # Setup environment
      - name: Java - setup SDK
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version: "21.x"
          cache: gradle
      - name: Flutter - setup SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
          cache: true
        # Fetch dependencies and generate code
        ## packages
        ### theming
      - name: theming - fetch dependencies
        working-directory: ./packages/theming
        run: flutter pub get
      - name: theming - generate code using build_runner
        working-directory: ./packages/theming
        run: dart run build_runner build
        ### misc_utils
      - name: misc_utils - fetch dependencies
        working-directory: ./packages/misc_utils
        run: flutter pub get
      - name: misc_utils - generate code using build_runner
        working-directory: ./packages/misc_utils
        run: dart run build_runner build
        ## pile_of_shame
      - name: pile_of_shame - fetch dependencies
        run: flutter pub get
      - name: pile_of_shame - generate Localizations
        run: flutter gen-l10n
      - name: pile_of_shame - generate code using build_runner
        run: dart run build_runner build
        # Prepare for build signing
      - name: Android App-Signing - prepare secrets directory
        run: mkdir -p secrets
      - name: Android App-Signing - insert secret upload keystore
        run: echo -n "${{secrets.UPLOAD_KEYSTORE_BASE64}}" | base64 --decode > ./secrets/upload-keystore.jks
      - name: Android App-Signing - insert secret key properties
        run: echo -n "${{secrets.KEY_PROPERTIES_BASE64}}" | base64 --decode > ./android/key.properties
      - name: Flutter - build application
        run: flutter build appbundle --release
      - name: Upload Android appbundle to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: build/app/outputs/bundle/release/app-release.aab
          asset_name: "pile_of_shame-$tag.aab"
  build_and_attach_apk_to_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    environment: Android
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        # Setup environment
      - name: Java - setup SDK
        uses: actions/setup-java@v5
        with:
          distribution: "zulu"
          java-version: "21.x"
          cache: gradle
      - name: Flutter - setup SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
          cache: true
        # Fetch dependencies and generate code
        ## packages
        ### theming
      - name: theming - fetch dependencies
        working-directory: ./packages/theming
        run: flutter pub get
      - name: theming - generate code using build_runner
        working-directory: ./packages/theming
        run: dart run build_runner build
        ### misc_utils
      - name: misc_utils - fetch dependencies
        working-directory: ./packages/misc_utils
        run: flutter pub get
      - name: misc_utils - generate code using build_runner
        working-directory: ./packages/misc_utils
        run: dart run build_runner build
        ## pile_of_shame
      - name: pile_of_shame - fetch dependencies
        run: flutter pub get
      - name: pile_of_shame - generate Localizations
        run: flutter gen-l10n
      - name: pile_of_shame - generate code using build_runner
        run: dart run build_runner build
        # Prepare for build signing
      - name: Android App-Signing - prepare secrets directory
        run: mkdir -p secrets
      - name: Android App-Signing - insert secret upload keystore
        run: echo -n "${{secrets.UPLOAD_KEYSTORE_BASE64}}" | base64 --decode > ./secrets/upload-keystore.jks
      - name: Android App-Signing - insert secret key properties
        run: echo -n "${{secrets.KEY_PROPERTIES_BASE64}}" | base64 --decode > ./android/key.properties
      - name: Flutter - build application
        run: flutter build apk --release
      - name: Upload Android apk to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: build/app/outputs/flutter-apk/app-release.apk
          asset_name: "pile_of_shame-$tag.apk"
